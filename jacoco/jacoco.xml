<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="Reproducible Build Maven Plugin"><sessioninfo id="debian-c01d1d6f" start="1443819026590" dump="1443819027866"/><sessioninfo id="debian-309c6499" start="1443819028959" dump="1443819038843"/><sessioninfo id="debian-a80d7f85" start="1443819039253" dump="1443819048085"/><sessioninfo id="debian-ea66ab31" start="1443819049433" dump="1443819054272"/><sessioninfo id="debian-57ffde5a" start="1443819054638" dump="1443819063200"/><sessioninfo id="debian-d2778e70" start="1443819063662" dump="1443819068402"/><package name="io/github/zlika/reproducible"><class name="io/github/zlika/reproducible/StripMojo"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="53"><counter type="INSTRUCTION" missed="15" covered="70"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findZipFiles" desc="(Ljava/io/File;)[Ljava/io/File;" line="78"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createStrippedFilename" desc="(Ljava/io/File;)Ljava/io/File;" line="85"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$findZipFiles$1" desc="(Ljava/io/File;Ljava/lang/String;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$null$0" desc="(Ljava/lang/String;Ljava/lang/String;)Z" line="79"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="142"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/zlika/reproducible/FileUtils"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNameWithoutExtension" desc="(Ljava/io/File;)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFileExtension" desc="(Ljava/io/File;)Ljava/lang/String;" line="47"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/zlika/reproducible/FixXjcMojo"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="execute" desc="()V" line="53"><counter type="INSTRUCTION" missed="16" covered="29"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createTempFile" desc="()Ljava/io/File;" line="85"><counter type="INSTRUCTION" missed="7" covered="8"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$execute$12" desc="(Lio/github/zlika/reproducible/XjcObjectFactoryFixer;Ljava/io/File;Ljava/nio/file/Path;)V" line="66"><counter type="INSTRUCTION" missed="15" covered="18"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$execute$11" desc="(Ljava/nio/file/Path;)Z" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$execute$10" desc="(Ljava/nio/file/Path;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="38" covered="69"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/zlika/reproducible/ManifestStripper"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strip" desc="(Ljava/io/File;Ljava/io/File;)V" line="41"><counter type="INSTRUCTION" missed="60" covered="60"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$strip$8" desc="(Ljava/io/BufferedWriter;Ljava/lang/String;)V" line="56"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$strip$7" desc="(Ljava/lang/String;)Z" line="51"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$strip$6" desc="(Ljava/lang/String;)Z" line="50"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$strip$5" desc="(Ljava/lang/String;)Z" line="49"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$strip$4" desc="(Ljava/lang/String;)Z" line="48"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$strip$3" desc="(Ljava/lang/String;)Z" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$strip$2" desc="(Ljava/lang/String;)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="116"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/zlika/reproducible/XjcObjectFactoryFixer"><method name="&lt;init&gt;" desc="(Ljava/nio/charset/Charset;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strip" desc="(Ljava/io/File;Ljava/io/File;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getStartMethodIndex" desc="(Ljava/lang/String;)I" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodBodies" desc="(Ljava/lang/String;I)Ljava/util/List;" line="75"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIsXjcObjectFactoryFile" desc="(Ljava/lang/String;)Z" line="90"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$strip$15" desc="(Ljava/lang/StringBuilder;Ljava/lang/String;)V" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="152"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/zlika/reproducible/PomPropertiesStripper"><method name="&lt;init&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strip" desc="(Ljava/io/File;Ljava/io/File;)V" line="36"><counter type="INSTRUCTION" missed="60" covered="50"/><counter type="BRANCH" missed="12" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$strip$14" desc="(Ljava/io/BufferedWriter;Ljava/lang/String;)V" line="46"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$strip$13" desc="(Ljava/lang/String;)Z" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="61" covered="69"/><counter type="BRANCH" missed="12" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="8" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/github/zlika/reproducible/ZipStripper"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addFileStripper" desc="(Ljava/lang/String;Lio/github/zlika/reproducible/Stripper;)Lio/github/zlika/reproducible/ZipStripper;" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strip" desc="(Ljava/io/File;Ljava/io/File;)V" line="62"><counter type="INSTRUCTION" missed="60" covered="113"/><counter type="BRANCH" missed="12" covered="8"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSubFilter" desc="(Ljava/lang/String;)Lio/github/zlika/reproducible/Stripper;" line="99"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRawInputStream" desc="(Lorg/apache/commons/compress/archivers/zip/ZipFile;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/io/InputStream;" line="115"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortEntriesByName" desc="(Ljava/util/Enumeration;)Ljava/util/List;" line="127"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="filterZipEntry" desc="(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;" line="136"><counter type="INSTRUCTION" missed="13" covered="31"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sortEntriesByName$9" desc="(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)Ljava/lang/String;" line="128"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="79" covered="223"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="4" covered="46"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="XjcObjectFactoryFixer.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="2"/><line nr="53" mi="0" ci="12" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="2"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="2"/><line nr="91" mi="0" ci="6" mb="1" cb="1"/><counter type="INSTRUCTION" missed="0" covered="152"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StripMojo.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="20" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="16" mb="0" cb="2"/><line nr="56" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="12" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="14" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="2"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="12" mb="0" cb="0"/><line nr="88" mi="2" ci="9" mb="1" cb="1"/><counter type="INSTRUCTION" missed="17" covered="142"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="2" covered="21"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FileUtils.java"><line nr="25" mi="2" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="9" mb="0" cb="2"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="2"/><counter type="INSTRUCTION" missed="3" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PomPropertiesStripper.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="10" ci="16" mb="0" cb="0"/><line nr="38" mi="0" ci="12" mb="0" cb="0"/><line nr="41" mi="0" ci="14" mb="0" cb="2"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="50" ci="14" mb="12" cb="4"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="61" covered="69"/><counter type="BRANCH" missed="12" covered="6"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="8" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ManifestStripper.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="10" ci="16" mb="0" cb="0"/><line nr="43" mi="0" ci="12" mb="0" cb="0"/><line nr="46" mi="0" ci="13" mb="0" cb="2"/><line nr="47" mi="0" ci="10" mb="0" cb="2"/><line nr="48" mi="0" ci="10" mb="0" cb="2"/><line nr="49" mi="1" ci="9" mb="1" cb="1"/><line nr="50" mi="1" ci="9" mb="1" cb="1"/><line nr="51" mi="1" ci="10" mb="1" cb="1"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="50" ci="14" mb="12" cb="4"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="116"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="11" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ZipStripper.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="10" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="2"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="50" ci="14" mb="12" cb="4"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="2"/><line nr="101" mi="0" ci="6" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="11" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="11" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="6" ci="11" mb="1" cb="1"/><line nr="143" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="223"/><counter type="BRANCH" missed="15" covered="13"/><counter type="LINE" missed="4" covered="46"/><counter type="COMPLEXITY" missed="10" covered="12"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FixXjcMojo.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="14" ci="0" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="15" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="69"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="262" covered="804"/><counter type="BRANCH" missed="44" covered="50"/><counter type="LINE" missed="16" covered="145"/><counter type="COMPLEXITY" missed="32" covered="58"/><counter type="METHOD" missed="1" covered="42"/><counter type="CLASS" missed="0" covered="7"/></package><counter type="INSTRUCTION" missed="262" covered="804"/><counter type="BRANCH" missed="44" covered="50"/><counter type="LINE" missed="16" covered="145"/><counter type="COMPLEXITY" missed="32" covered="58"/><counter type="METHOD" missed="1" covered="42"/><counter type="CLASS" missed="0" covered="7"/></report>